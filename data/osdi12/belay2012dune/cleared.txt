Time [in minutes]:

10

Platform [OS, libraries, etc.]:

Used a bare metal 'dl360' PC (Dell PowerEdge 360) from aptlab.net running
Ubuntu 12.04 LTS and kernel 3.2.0 . OS and hardware details [relevant because
of CPU features required by the software] can be found below.

> uname -a
Linux node.qv241.emulab-net.utahddc.geniracks.net 3.2.0-56-generic #86-Ubuntu SMP Wed Oct 23 09:20:45 UTC 2013 x86_64 x86_64 x86_64 GNU/Linux
[Relevant because software requires a relatively recent 64-bit Linux kernel]

> lscpu
Architecture:          x86_64
CPU op-mode(s):        32-bit, 64-bit
Byte Order:            Little Endian
CPU(s):                32
On-line CPU(s) list:   0-31
Thread(s) per core:    2
Core(s) per socket:    8
Socket(s):             2
NUMA node(s):          2
Vendor ID:             GenuineIntel
CPU family:            6
Model:                 45
Stepping:              7
CPU MHz:               2095.005
BogoMIPS:              4189.20
Virtualization:        VT-x
L1d cache:             32K
L1i cache:             32K
L2 cache:              256K
L3 cache:              20480K
NUMA node0 CPU(s):     0-7,16-23
NUMA node1 CPU(s):     8-15,24-31
[Relevant because software requires VT-X]

Skill level (at least the following; tell us if you have a paper-specific skill):

- I can build complex software like GCC and the Linux kernel

Sequence of steps to build:

* `git clone http://dune.scs.stanford.edu/dune.git`, got revision d7e7915 dated
    May 1, 2013

* `dune_req.sh`, not strictly necessary, but checks that the kernel and CPU
    have features required for the software

* `sudo make` (root required because it builds some objects in kernel tree)

* `sudo insmod kern/dune.ko` to make sure the built kernel module works

* `sudo test/hello` to make sure the system actually works (it does)

Detailed evaluation:

Succeeded easily - well packaged and documented. Anyone wishing to do research
in this area would have no problem building and running the software.

The software has a few dependencies on kernel and CPU features, which does mean
one cannot run it absolutely anywhere, but these features are very common. The
authors helpfully include a simple script to test whether the machine it's run
on meets the requirements.

I followed the README provided in the source tree, which was very helpful in
not only explaining how to build, but also how to run many of the test and
benchmarking programs included in the software. Very nicely packaged, kudos to
the authors.
